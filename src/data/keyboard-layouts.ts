// Auto-generated keyboard layouts data
// This file is generated by scripts/generate-layouts-keymaps-zmk.sh

import { KeyboardLayout } from '../types/keyboard';

// Sample standard layout for testing
const standardLayout: KeyboardLayout = {
    id: 'standard',
    name: 'Standard QWERTY',
    description: 'Standard 104-key QWERTY keyboard layout',
    width: 1500,
    height: 500,
    split: false,
    keys: [
        // Row 1 (number row) - simplified for demo
        {
            code: 'Digit1',
            key: '1',
            label: '1',
            position: { row: 0, col: 0, x: 100, y: 100 },
            isAlphanumeric: true,
        },
        {
            code: 'Digit2',
            key: '2',
            label: '2',
            position: { row: 0, col: 1, x: 200, y: 100 },
            isAlphanumeric: true,
        },
        {
            code: 'Digit3',
            key: '3',
            label: '3',
            position: { row: 0, col: 2, x: 300, y: 100 },
            isAlphanumeric: true,
        },
        // Row 2 (QWERTY)
        {
            code: 'KeyQ',
            key: 'q',
            label: 'Q',
            position: { row: 1, col: 0, x: 100, y: 200 },
            isAlphanumeric: true,
        },
        {
            code: 'KeyW',
            key: 'w',
            label: 'W',
            position: { row: 1, col: 1, x: 200, y: 200 },
            isAlphanumeric: true,
        },
        {
            code: 'KeyE',
            key: 'e',
            label: 'E',
            position: { row: 1, col: 2, x: 300, y: 200 },
            isAlphanumeric: true,
        },
        // Modifiers
        {
            code: 'ShiftLeft',
            key: 'Shift',
            label: 'Shift',
            position: { row: 3, col: 0, x: 50, y: 400 },
            isModifier: true,
        },
        {
            code: 'Space',
            key: ' ',
            label: 'Space',
            position: { row: 4, col: 5, x: 400, y: 500, width: 600 },
        },
    ],
};

// Corne layout (popular split keyboard)
const corneLayout: KeyboardLayout = {
    id: 'corne',
    name: 'Corne (CRKBD)',
    description: 'Popular 42-key split ergonomic keyboard',
    width: 1400,
    height: 400,
    split: true,
    thumbClusters: true,
    keys: [
        // Left half - top row
        {
            code: 'Tab',
            key: 'Tab',
            label: 'Tab',
            position: { row: 0, col: 0, x: 0, y: 37 },
            zone: 'left',
        },
        {
            code: 'KeyQ',
            key: 'q',
            label: 'Q',
            position: { row: 0, col: 1, x: 100, y: 37 },
            zone: 'left',
            isAlphanumeric: true,
        },
        {
            code: 'KeyW',
            key: 'w',
            label: 'W',
            position: { row: 0, col: 2, x: 200, y: 12 },
            zone: 'left',
            isAlphanumeric: true,
        },
        {
            code: 'KeyE',
            key: 'e',
            label: 'E',
            position: { row: 0, col: 3, x: 300, y: 0 },
            zone: 'left',
            isAlphanumeric: true,
        },
        {
            code: 'KeyR',
            key: 'r',
            label: 'R',
            position: { row: 0, col: 4, x: 400, y: 12 },
            zone: 'left',
            isAlphanumeric: true,
        },
        {
            code: 'KeyT',
            key: 't',
            label: 'T',
            position: { row: 0, col: 5, x: 500, y: 24 },
            zone: 'left',
            isAlphanumeric: true,
        },

        // Right half - top row
        {
            code: 'KeyY',
            key: 'y',
            label: 'Y',
            position: { row: 0, col: 6, x: 800, y: 24 },
            zone: 'right',
            isAlphanumeric: true,
        },
        {
            code: 'KeyU',
            key: 'u',
            label: 'U',
            position: { row: 0, col: 7, x: 900, y: 12 },
            zone: 'right',
            isAlphanumeric: true,
        },
        {
            code: 'KeyI',
            key: 'i',
            label: 'I',
            position: { row: 0, col: 8, x: 1000, y: 0 },
            zone: 'right',
            isAlphanumeric: true,
        },
        {
            code: 'KeyO',
            key: 'o',
            label: 'O',
            position: { row: 0, col: 9, x: 1100, y: 12 },
            zone: 'right',
            isAlphanumeric: true,
        },
        {
            code: 'KeyP',
            key: 'p',
            label: 'P',
            position: { row: 0, col: 10, x: 1200, y: 37 },
            zone: 'right',
            isAlphanumeric: true,
        },
        {
            code: 'Backspace',
            key: 'Backspace',
            label: 'Bspc',
            position: { row: 0, col: 11, x: 1300, y: 37 },
            zone: 'right',
        },

        // Left half - home row
        {
            code: 'ControlLeft',
            key: 'Control',
            label: 'Ctrl',
            position: { row: 1, col: 0, x: 0, y: 137 },
            zone: 'left',
            isModifier: true,
        },
        {
            code: 'KeyA',
            key: 'a',
            label: 'A',
            position: { row: 1, col: 1, x: 100, y: 137 },
            zone: 'left',
            isAlphanumeric: true,
        },
        {
            code: 'KeyS',
            key: 's',
            label: 'S',
            position: { row: 1, col: 2, x: 200, y: 112 },
            zone: 'left',
            isAlphanumeric: true,
        },
        {
            code: 'KeyD',
            key: 'd',
            label: 'D',
            position: { row: 1, col: 3, x: 300, y: 100 },
            zone: 'left',
            isAlphanumeric: true,
        },
        {
            code: 'KeyF',
            key: 'f',
            label: 'F',
            position: { row: 1, col: 4, x: 400, y: 112 },
            zone: 'left',
            isAlphanumeric: true,
        },
        {
            code: 'KeyG',
            key: 'g',
            label: 'G',
            position: { row: 1, col: 5, x: 500, y: 124 },
            zone: 'left',
            isAlphanumeric: true,
        },

        // Right half - home row
        {
            code: 'KeyH',
            key: 'h',
            label: 'H',
            position: { row: 1, col: 6, x: 800, y: 124 },
            zone: 'right',
            isAlphanumeric: true,
        },
        {
            code: 'KeyJ',
            key: 'j',
            label: 'J',
            position: { row: 1, col: 7, x: 900, y: 112 },
            zone: 'right',
            isAlphanumeric: true,
        },
        {
            code: 'KeyK',
            key: 'k',
            label: 'K',
            position: { row: 1, col: 8, x: 1000, y: 100 },
            zone: 'right',
            isAlphanumeric: true,
        },
        {
            code: 'KeyL',
            key: 'l',
            label: 'L',
            position: { row: 1, col: 9, x: 1100, y: 112 },
            zone: 'right',
            isAlphanumeric: true,
        },
        {
            code: 'Semicolon',
            key: ';',
            label: ';',
            position: { row: 1, col: 10, x: 1200, y: 137 },
            zone: 'right',
        },
        {
            code: 'Quote',
            key: "'",
            label: "'",
            position: { row: 1, col: 11, x: 1300, y: 137 },
            zone: 'right',
        },

        // Thumb clusters
        {
            code: 'MetaLeft',
            key: 'Meta',
            label: 'GUI',
            position: { row: 3, col: 3, x: 350, y: 312 },
            zone: 'thumb',
            isModifier: true,
        },
        {
            code: 'Space',
            key: ' ',
            label: 'Space',
            position: { row: 3, col: 4, x: 450, y: 312 },
            zone: 'thumb',
        },
        {
            code: 'Enter',
            key: 'Enter',
            label: 'Enter',
            position: { row: 3, col: 5, x: 850, y: 312 },
            zone: 'thumb',
        },
        {
            code: 'AltRight',
            key: 'Alt',
            label: 'Alt',
            position: { row: 3, col: 6, x: 950, y: 312 },
            zone: 'thumb',
            isModifier: true,
        },
    ],
};

export const keyboardLayouts: KeyboardLayout[] = [standardLayout, corneLayout];

export function getLayoutById(id: string): KeyboardLayout | undefined {
    return keyboardLayouts.find((layout) => layout.id === id);
}
